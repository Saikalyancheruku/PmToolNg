name: Dockerized Angular CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    # Step 3: Cache Node.js modules
    - name: Cache Node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Step 4: Install dependencies
    - name: Install dependencies
      run: npm install

    # Step 5: Build the Docker image
    - name: Build Docker image
      run: docker build -t angular-frontend .

    # Step 6: Test the Docker container
    - name: Test Docker container
      run: |
        docker run -d -p 8080:80 --name angular-container angular-frontend
        sleep 10 # Allow container to initialize
        curl -I http://localhost:8080

    # Step 7: Install Render CLI
    - name: Install Render CLI
      run: npm install -g render-cli

    # Step 8: Verify Render CLI installation
    - name: Verify Render CLI
      run: render --version

    # Step 9: Set Render API Key
    - name: Set Render API Key
      run: echo ${{ secrets.RENDER_API_KEY }} > ~/.render-api-key

    # Step 10: Deploy to Render
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        render deploy --service project-management --region us-central --env docker --verbose

    # Step 11: Clean up Docker container
    - name: Stop and remove Docker container
      if: always()
      run: |
        docker stop angular-container || true
        docker rm angular-container || true
